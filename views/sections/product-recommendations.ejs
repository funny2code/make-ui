<link rel="stylesheet" href="/assets/component-badge.css">
<link rel="stylesheet" href="/assets/component-card-style-1.css">
<link rel="stylesheet" href="/assets/component-price-style-1.css">
<link rel="stylesheet" href="/assets/section-product-recommendations-style-1.css">
<link rel="stylesheet" href="/assets/component-variants.css">

<product-recommendations class="product-recommendations page-width" data-url="/recommendations/products?section_id=recommendations&product_id=<%= product?.id %>&limit=8">
  <% if(collection.products_count > 0){ %>
    <h2 class="product-recommendations__heading"><%= section.settings.heading %></h2>
    <ul class="grid grid--2-col grid--3-col-tablet<% if(collection?.products_count > 3){ %> grid--4-col-desktop grid--quarter-max<% } %> bc-scroll-hide" role="list">
      <% var count = 1 %>
      <% collection?.products?.forEach((recommendation,index)=>{ %>
        <% if(count <= 4){ %>
            <% count = count + 1 %>
            <li class="grid__item">
              <%- include('../snippets/product-card',
                {product_card_product: recommendation,
                media_size: section.settings.image_ratio,
                show_secondary_image: section.settings.show_secondary_image,
                add_image_padding: section.settings.add_image_padding,
                show_vendor: section.settings.show_vendor,
                blocks: section.blocks,
                show_colors: false})
              %>
            </li>
        <% } %>
      <% }) %>
    </ul>
  <% } %>
</product-recommendations>

<!-- <script>
  class ProductRecommendations extends HTMLElement {
    constructor() {
      super();

      const handleIntersection = (entries, observer) => {
        if (!entries[0].isIntersecting) return;
        observer.unobserve(this);

        fetch(this.dataset.url)
          .then(response => response.text())
          .then(text => {
            const html = document.createElement('div');
            html.innerHTML = text;
            const recommendations = html.querySelector('product-recommendations');
            if (recommendations && collection?.innerHTML.trim().length) {
              this.innerHTML = collection?.innerHTML;
            }
          })
          .catch(e => {
            console.error(e);
          });
      }

      new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 200px 0px'}).observe(this);
    }
  }

  customElements.define('product-recommendations', ProductRecommendations);
</script> -->