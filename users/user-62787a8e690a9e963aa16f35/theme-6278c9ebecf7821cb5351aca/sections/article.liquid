{{ 'section-blog-post.css' | asset_url | stylesheet_tag }}
<style>
  @media(min-width:800px){
  .py-horizontal{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
  }
  .py-horizontal>div{
    width:48%;
  }
  }
</style>
<div class="py-{{section.settings.bg_color}}">
<article class=" py-{{section.settings.page_y_pd}} article-template {% if section.settings.layout == 'horizontal' %} py-{{section.settings.page_width}}{% endif %}" itemscope itemtype="http://schema.org/BlogPosting">
<div class="main-content-container py-{{section.settings.layout}}">
  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when 'featured_image'-%}
        {%- if article.image -%}
        <style>
          .article-template__hero-container .media{
            border-radius:{{block.settings.img_border_radius}}px;
          }
          {% if block.settings.image_display == 'repeat' %}
          .article-template__hero-container img{
            visibility: hidden;
          }
          .article-template__hero-container .media{
            background-image:url({{ article.image | img_url: '350x' }});
            background-repeat:repeat;
          }
          .py-width-full.article-template__hero-container{
            max-width:100%;
          }
          {% endif %}
          {%- if block.settings.image_height != 'default' -%}
          .article-template__hero-container .media{
            padding-bottom:{{block.settings.image_height}};
          }
          {%- endif -%}
          {% if section.settings.layout == 'vertical' and block.settings.image_width == 'full' %}
          .article-template{
            padding-top:0px;
          }
          {% endif %}
        </style>
          <div class="article-template__hero-container py-width-{{block.settings.image_width}} {% if section.settings.layout == 'vertical' and block.settings.image_width != 'full' %} py-{{section.settings.page_width}}{% endif %}">
            <div class="article-template__hero-{{ block.settings.image_display }} media"
              itemprop="image"
              {% if block.settings.image_height == 'default' and article.image %} style="padding-bottom: {{ 1 | divided_by: article.image.aspect_ratio | times: 100 }}%;"{% endif %}
            >
              <img srcset="{% if article.image.width >= 350 %}{{ article.image | img_url: '350x' }} 350w,{% endif %}
                  {% if article.image.width >= 700 %}{{ article.image | img_url: '700x' }} 700w,{% endif %}
                  {% if article.image.width >= 749 %}{{ article.image | img_url: '749x' }} 749w,{% endif %}
                  {% if article.image.width >= 1498 %}{{ article.image | img_url: '1498x' }} 1498w,{% endif %}
                  {% if article.image.width >= 1100 %}{{ article.image | img_url: '1100x' }} 1100w,{% endif %}
                  {% if article.image.width >= 2200 %}{{ article.image | img_url: '2200x' }} 2200w,{% endif %}"
                sizes="(min-width: 1200px) 1100px, (min-width: 750px) calc(100vw - 10rem), 100vw"
                src="{{ article.image | img_url: '1100x' }}"
                loading="lazy"
                width="{{ article.image.width }}"
                height="{{ article.image.height }}"
                alt="{{ article.image.alt | escape }}">
            </div>
          </div>
        {%- endif -%}
     {%- endcase -%}
  {%- endfor -%}
  <div class="article-template__content-container {% if section.settings.layout == 'vertical' %} py-{{section.settings.page_width}}{% endif %}">
  {%- for block in section.blocks -%}
    {%- case block.type -%}
        {%- when 'title'-%}
        <style>
          .article-template__title{
            font-size:{{block.settings.title_font_size}}px;
            color:{{block.settings.title_color}};
            text-align:{{block.settings.title_align}};
          }
          .blog-date{
            font-size:{{block.settings.date_font_size}}px;
            color:{{block.settings.date_color}};
            text-align:{{block.settings.date_align}};
          }
          .blog-author{
            font-size:{{block.settings.author_font_size}}px;
            color:{{block.settings.author_color}};
            text-align:{{block.settings.author_align}};
          }          
        </style>
          <header class="page-width">
            <h1 class="article-template__title" itemprop="headline">{{ article.title | escape }}</h1>
            {%- if block.settings.blog_show_date -%}
              <p class="caption-with-letter-spacing blog-date" itemprop="dateCreated pubdate datePublished">{{ article.published_at | date: "%b %d, %y" }}</p>
            {%- endif -%}
            {%- if block.settings.blog_show_author -%}
              <p class="caption-with-letter-spacing blog-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
                <span itemprop="name">{{ article.author }}</span>
              </p>
            {%- endif -%}
          </header>

        {%- when 'content'-%}
           <style>              
              .article-template__content{
                font-size:{{block.settings.content_font_size}}px;
                color:{{block.settings.content_color}};
                text-align:{{block.settings.content_align}};
              }
          </style>
          <div class="article-template__content page-width rte" itemprop="articleBody">
              {{ article.content }}
          </div>

        {%- when 'social_sharing'-%}
          <div class="article-template__social-sharing page-width">
            {% render 'social-sharing', share_title: article.title, share_permalink: article.url, share_image: article.image %}
          </div>
    {%- endcase -%}
  {%- endfor -%}
  </div>
  </div>  
  {%- if blog.comments_enabled? -%}
    <div class="article-template__comment-wrapper background-secondary">
      <div id="comments" class="page-width">
        {%- if article.comments_count > 0 -%}
          {%- assign anchorId = '#Comments-' | append: article.id -%}

          <h2 id="Comments-{{ article.id }}">{{ 'blogs.article.comments' | t: count: article.comments_count }}</h2>
          {% paginate article.comments by 5 %}
            <div class="article-template__comments">
              {%- if comment.status == 'pending' and comment.content -%}
                <article id="{{ comment.id }}" class="article-template__comments-comment">
                  {{ comment.content }}
                  <footer class="right">
                    <span class="circle-divider caption-with-letter-spacing">{{ comment.author }}</span>
                  </footer>
                </article>
              {%- endif -%}

              {%- for comment in article.comments -%}
                <article id="{{ comment.id }}" class="article-template__comments-comment">
                  {{ comment.content }}
                  <footer class="right">
                    <span class="circle-divider caption-with-letter-spacing">{{ comment.author }}</span><span class="caption-with-letter-spacing">{{ comment.created_at | time_tag: format: 'month_year' }}</span>
                  </footer>
                </article>
              {%- endfor -%}
              {% render 'pagination', paginate: paginate, anchor: anchorId %}
            </div>
          {% endpaginate %}
        {%- endif -%}
        {% form 'new_comment', article %}
          {%- liquid
            assign post_message = 'blogs.article.success'
            if blog.moderated? and comment.status == 'unapproved'
              assign post_message = 'blogs.article.success_moderated'
            endif
          -%}
          <h2>{{ 'blogs.article.comment_form_title' | t }}</h2>
          {%- if form.errors -%}
            <div class="form__message" role="alert">
              <h3 class="form-status caption-large" tabindex="-1" autofocus>
                {% render 'icon-error' %} {{ 'templates.contact.form.error_heading' | t }}
              </h3>
            </div>
            <ul class="form-status-list caption-large">
              {%- for field in form.errors -%}
                <li>
                  <a href="#CommentForm-{{ field }}" class="link">
                    {%- if form.errors.translated_fields[field] contains 'author' -%}
                      {{ 'blogs.article.name' | t }}
                    {%- elsif form.errors.translated_fields[field] contains 'body'-%}
                     {{ 'blogs.article.message' | t }}
                    {%- else -%}
                      {{ form.errors.translated_fields[field] }}
                    {%- endif -%}
                    {{ form.errors.messages[field] }}
                  </a>
                </li>
              {%- endfor -%}
            </ul>
          {%- elsif form.posted_successfully? -%}
            <div class="form-status-list form__message" role="status">
              <h3 class="form-status" tabindex="-1" autofocus>{% render 'icon-success' %} {{ post_message | t }}</h3>
            </div>
          {%- endif -%}

          <div{% if blog.moderated? == false %} class="article-template__comments-fields"{% endif %}>
            <div class="article-template__comment-fields">
              <div class="field field--with-error">
                <input
                  type="text"
                  name="comment[author]"
                  id="CommentForm-author"
                  class="field__input"
                  autocomplete="name"
                  value="{{ form.author }}"
                  aria-required="true"
                  {% if form.errors contains 'author' %}
                    aria-invalid="true"
                    aria-describedby="CommentForm-author-error"
                  {% endif %}
                  placeholder="{{ 'blogs.article.name' | t }}"
                >
                <label class="field__label" for="CommentForm-author">{{ 'blogs.article.name' | t }} <span aria-hidden="true">*</span></label>
                {%- if form.errors contains 'author' -%}
                  <small id="CommentForm-author-error">
                    <span class="form__message">{% render 'icon-error' %}{{ 'blogs.article.name' | t }} {{ form.errors.messages['author'] }}.</span>
                  </small>
                {%- endif -%}
              </div>
              <div class="field field--with-error">
                <input
                  type="email"
                  name="comment[email]"
                  id="CommentForm-email"
                  autocomplete="email"
                  class="field__input"
                  value="{{ form.email }}"
                  autocorrect="off"
                  autocapitalize="off"
                  aria-required="true"
                  {% if form.errors contains 'email' %}
                    aria-invalid="true"
                    aria-describedby="CommentForm-email-error"
                  {% endif %}
                  placeholder="{{ 'blogs.article.email' | t }}"
                >
                <label class="field__label" for="CommentForm-email">{{ 'blogs.article.email' | t }} <span aria-hidden="true">*</span></label>
                {%- if form.errors contains 'email' -%}
                  <small id="CommentForm-email-error">
                    <span class="form__message">{% render 'icon-error' %}{{ 'blogs.article.email' | t }} {{ form.errors.messages['email'] }}.</span>
                  </small>
                {%- endif -%}
              </div>
            </div>
            <div class="field field--with-error">
              <textarea
                rows="5"
                name="comment[body]"
                id="CommentForm-body"
                class="text-area field__input"
                aria-required="true"
                {% if form.errors contains 'body' %}
                  aria-invalid="true"
                  aria-describedby="CommentForm-body-error"
                {% endif %}
                placeholder="{{ 'blogs.article.message' | t }}"
              >{{ form.body }}</textarea>
                <label class="form__label field__label" for="CommentForm-body">{{ 'blogs.article.message' | t }} <span aria-hidden="true">*</span></label>
            </div>
            {%- if form.errors contains 'body' -%}
              <small id="CommentForm-body-error">
                <span class="form__message">{% render 'icon-error' %}{{ 'blogs.article.message' | t }} {{ form.errors.messages['body'] }}.</span>
              </small>
            {%- endif -%}
          </div>
          {%- if blog.moderated? -%}
            <p class="article-template__comment-warning caption">{{ 'blogs.article.moderated' | t }}</p>
          {%- endif -%}
          <input type="submit" class="button" value="{{ 'blogs.article.post' | t }}">
        {% endform %}
      </div>
  </div>
  {%- endif -%}
</article>
</div>

{% schema %}
{
  "name": "t:sections.main-article.name",
  "tag": "section",
  "settings": [    
    {
      "type": "select",
      "id": "layout",
      "options": [        
        {
          "value": "vertical",
          "label": "Vertical"
        },
        {
          "value": "horizontal",
          "label": "Horizontal"
        }
      ],
      "default": "vertical",
      "label": "Article layout"
    },
    {
      "type": "select",
      "id": "page_width",
      "label": "Section Container (Width)",
      "options": [
        {
          "label": "Unset",
          "value": "width-un"
        },
        {
          "label": "Large",
          "value": "width-l"
        },
        {
          "label": "Medium",
          "value": "width-m"
        },
        {
          "label": "Small",
          "value": "width-s"
        }
      ],
      "default": "width-un"
    },
    {
      "type": "select",
      "id": "bg_color",
      "label": "Section Background ",
      "options": [          
        {
          "label": "Transparent",
          "value": "bg-c-none"
        },        
        {
          "label": "Dark",
          "value": "bg-c-dark"
        },
        {
          "label": "Middle Dark",
          "value": "bg-c-middle-dark"
        },
        {
          "label": "Average",
          "value": "bg-c-average"
        },
        {
          "label": "Middle Light",
          "value": "bg-c-middle-light"
        },
        {
          "label": "Light",
          "value": "bg-c-light"
        }
      ],
     "default": "bg-c-average"
    },
    {
      "type": "select",
      "id": "page_y_pd",
      "label": "Container Padding Vertical",
      "options": [
        {
          "label": "Unset",
          "value": "pd-y-un"
        },
        {
          "label": "None",
          "value": "pd-y-n"
        },
        {
          "label": "XL",
          "value": "pd-y-xl"
        },
        {
          "label": "L",
          "value": "pd-y-l"
        },
        {
          "label": "M",
          "value": "pd-y-m"
        },
        {
          "label": "S",
          "value": "pd-y-s"
        },
        {
          "label": "XS",
          "value": "pd-y-xs"
        }
      ],
      "default": "pd-y-m"
    }
  ],
  "blocks": [
    {
      "type": "featured_image",
      "name": "t:sections.main-article.blocks.featured_image.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "image_display",
          "options": [
            {
              "value": "cover",
              "label": "Cover"
            },
            {
              "value": "fit",
              "label": "Fit"
            },
            {
              "value": "repeat",
              "label": "Repeat"
            }
          ],
          "default": "fit",
          "label": "Image Display"
        },
        {
          "type": "select",
          "id": "image_width",
          "options": [
            {
              "value": "default",
              "label": "Default"
            },
            {
              "value": "full",
              "label": "Full width (vertical layout only)"
            }
          ],
          "default": "default",
          "label": "Image Width"
        },
        {
          "type": "select",
          "id": "image_height",
          "options": [
            {
              "value": "default",
              "label": "Default"
            },
            {
              "value": "30vh",
              "label": "30vh"
            },
            {
              "value": "60vh",
              "label": "60vh"
            },
            {
              "value": "90vh",
              "label": "90vh"
            }
          ],
          "default": "default",
          "label": "Image Height"
        },
        {
            "type": "range",
            "id": "img_border_radius",
            "min": 0,
            "max": 40,
            "step": 1,
            "default": 5,
            "label": "Image Border Radius"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-article.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "range",
          "id": "title_font_size",
          "min": 10,
          "max": 40,
          "step": 1,
          "default": 24,
          "label": "Title Font Size"
        },
        {
          "type": "select",
          "id": "title_color",
          "label": "Title Color",
          "options": [ 
             {
               "label": "Dark",
               "value": "var(--py-color-dark)"
             },
             {
               "label": "Average",
               "value": "var(--py-color-avarge)"
             },
             {
               "label": "Light",
               "value": "var(--py-color-light)"
             }
            ],
          "default": "var(--py-color-dark)"
        },
        {
          "type": "select",
          "id": "title_align",
          "label": "Title Alignment",
          "options": [ 
             {
               "label": "Left",
               "value": "left"
             },
             {
               "label": "Center",
               "value": "center"
             },
             {
               "label": "Right",
               "value": "right"
             }
            ],
          "default": "left"
        },
        {
          "type": "checkbox",
          "id": "blog_show_date",
          "default": true,
          "label": "t:sections.main-article.blocks.title.settings.blog_show_date.label"
        },
        {
          "type": "range",
          "id": "date_font_size",
          "min": 10,
          "max": 40,
          "step": 1,
          "default": 24,
          "label": "Date Font Size"
        },
        {
          "type": "select",
          "id": "date_color",
          "label": "Date Color",
          "options": [ 
             {
               "label": "Dark",
               "value": "var(--py-color-dark)"
             },
             {
               "label": "Average",
               "value": "var(--py-color-avarge)"
             },
             {
               "label": "Light",
               "value": "var(--py-color-light)"
             }
            ],
          "default": "var(--py-color-avarge)"
        },
        {
          "type": "select",
          "id": "date_align",
          "label": "Date Alignment",
          "options": [ 
             {
               "label": "Left",
               "value": "left"
             },
             {
               "label": "Center",
               "value": "center"
             },
             {
               "label": "Right",
               "value": "right"
             }
            ],
          "default": "left"
        },
        {
          "type": "checkbox",
          "id": "blog_show_author",
          "default": false,
          "label": "t:sections.main-article.blocks.title.settings.blog_show_author.label"
        },
        {
          "type": "range",
          "id": "author_font_size",
          "min": 10,
          "max": 40,
          "step": 1,
          "default": 24,
          "label": "Author Font Size"
        },
        {
          "type": "select",
          "id": "author_color",
          "label": "Author Color",
          "options": [ 
             {
               "label": "Dark",
               "value": "var(--py-color-dark)"
             },
             {
               "label": "Average",
               "value": "var(--py-color-avarge)"
             },
             {
               "label": "Light",
               "value": "var(--py-color-light)"
             }
            ],
          "default": "var(--py-color-avarge)"
        },
        {
          "type": "select",
          "id": "author_align",
          "label": "Author Alignment",
          "options": [ 
             {
               "label": "Left",
               "value": "left"
             },
             {
               "label": "Center",
               "value": "center"
             },
             {
               "label": "Right",
               "value": "right"
             }
            ],
          "default": "left"
        }
      ]
    },
    {
      "type": "content",
      "name": "t:sections.main-article.blocks.content.name",
      "limit": 1,
      "settings": [
        {
          "type": "range",
          "id": "content_font_size",
          "min": 10,
          "max": 40,
          "step": 1,
          "default": 24,
          "label": "Content Font Size"
        },
        {
          "type": "select",
          "id": "content_color",
          "label": "Content Color",
          "options": [ 
             {
               "label": "Dark",
               "value": "var(--py-color-dark)"
             },
             {
               "label": "Average",
               "value": "var(--py-color-avarge)"
             },
             {
               "label": "Light",
               "value": "var(--py-color-light)"
             }
            ],
          "default": "var(--py-color-dark)"
        },
        {
          "type": "select",
          "id": "content_align",
          "label": "Content Alignment",
          "options": [ 
             {
               "label": "Left",
               "value": "left"
             },
             {
               "label": "Center",
               "value": "center"
             },
             {
               "label": "Right",
               "value": "right"
             }
            ],
          "default": "left"
        }
      ]
    },
    {
      "type": "social_sharing",
      "name": "t:sections.main-article.blocks.social_sharing.name",
      "limit": 1
    }
  ]
}
{% endschema %}
